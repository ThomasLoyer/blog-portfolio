services:
  db:
    image: postgres:15-alpine
    container_name: blog-db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    container_name: blog-backend
    volumes:
      - ./backend:/app
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  nginx:
    image: nginx:stable-alpine
    container_name: blog-nginx
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/var/www/backend:ro
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
    container_name: blog-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    stdin_open: true
    tty: true

  java-client:
    build:
      context: ./java-client
    container_name: blog-java-client
    # A activer quand le JAR sera pret
    # command: ["java", "-jar", "client.jar"]

volumes:
  pgdata:
  